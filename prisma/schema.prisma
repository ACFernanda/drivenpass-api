generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cards {
  id             Int      @id @default(autoincrement())
  userId         Int
  title          String
  number         String
  name           String
  securityCode   String
  expirationDate String
  password       String
  isVirtual      Boolean  @default(false)
  type           cardtype
  users          users    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([userId, title])
}

model credentials {
  id       Int    @id @default(autoincrement())
  userId   Int
  title    String
  url      String
  user     String
  password String
  users    users  @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([userId, title])
}

model notes {
  id     Int    @id @default(autoincrement())
  userId Int
  title  String
  note   String
  users  users  @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([userId, title])
}

model users {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  password    String
  cards       cards[]
  credentials credentials[]
  notes       notes[]
  wifi        wifi[]
}

model wifi {
  id       Int    @id @default(autoincrement())
  userId   Int
  title    String
  name     String
  password String
  users    users  @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([userId, title])
}

enum cardtype {
  credit
  debit
  credit_debit  @map("credit-debit")
}
